<!DOCTYPE html>
<html>
  <head>

    <title>Charles Tacker TAMU Map</title>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>

    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>

    <!--Tamu building file (must be saved in same directory)-->
    <script src="tamubuildings.js"></script>
  </head>

  <body>
    <!-- Map-->
    <div id="map" style = "width:900px; height:580px"></div>

    <script>
        var map = L.map('map').setView([30.6138, -96.340334], 16);
        

        //Street tile layer
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        // Info Control (Hover Display)
        var info = L.control();

        info.onAdd = function (map) {
            this._div = L.DomUtil.create('div', 'info'); 
            this.update();
            return this._div;
        };
        
        //Helpful snippet thing
        info.update = function (props) {
            this._div.innerHTML = '<h4>TAMU Building Info</h4>' +  
                (props ? '<b>' + props.BldgName + '</b><br />' + props.BldgAbbr 
                : 'Hover over a building');
        };

        info.addTo(map);

        // Building Styling
        function buildingStyle(feature) {
            return {
                fillColor: "#500000", // Maroon
                weight: 2,
                opacity: 1,
                color: 'white',
                fillOpacity: 0.7
            };
        }

        // Highlight Effect on Hover
        function highlightFeature(e) {
            var layer = e.target;
            layer.setStyle({
                weight: 3,
                color: 'yellow',
                fillOpacity: 0.9
            });

            info.update(layer.feature.properties);
        }


        // Zoom to Feature upon clicking
        function zoomToFeature(e) {
            map.fitBounds(e.target.getBounds());
        }

        //Loading the GeoJSON data from tamubuildings.js
        var geojsonLayer = L.geoJSON(tamu, {
            style: buildingStyle,
            onEachFeature: function (feature, layer) {
                layer.on({
                    mouseover: highlightFeature,
                    mouseout: resetHighlight,
                    click: zoomToFeature
                });
            }
        }).addTo(map);

        // Reset Highlight
        function resetHighlight(e) {
            geojsonLayer.resetStyle(e.target);
            info.update();
        }
    </script>  


  </body>
</html>
